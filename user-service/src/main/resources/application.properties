# H2 in-memory database
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:ecommerce;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
quarkus.datasource.username=sa
quarkus.datasource.password=sa
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true

quarkus.h2.console.enabled=true
quarkus.h2.console.path=/h2


# Disable Testcontainers for RabbitMQ - use existing container
quarkus.rabbitmq.devservices.enabled=false

# RabbitMQ connection
mp.messaging.connector.smallrye-rabbitmq.host=localhost
mp.messaging.connector.smallrye-rabbitmq.port=5672
mp.messaging.connector.smallrye-rabbitmq.username=guest
mp.messaging.connector.smallrye-rabbitmq.password=guest

# User registration event publishing
mp.messaging.outgoing.user-registered.connector=smallrye-rabbitmq
mp.messaging.outgoing.user-registered.exchange.name=user-events
mp.messaging.outgoing.user-registered.exchange.type=topic
mp.messaging.outgoing.user-registered.routing-key=user.registered

# Order event publishing
mp.messaging.outgoing.order-created.connector=smallrye-rabbitmq
mp.messaging.outgoing.order-created.exchange.name=order-events
mp.messaging.outgoing.order-created.exchange.type=topic
mp.messaging.outgoing.order-created.routing-key=order.created

# Order notification publishing
mp.messaging.outgoing.order-notification.connector=smallrye-rabbitmq
mp.messaging.outgoing.order-notification.exchange.name=notification-events
mp.messaging.outgoing.order-notification.exchange.type=topic
mp.messaging.outgoing.order-notification.routing-key=notification.order

%dev.quarkus.datasource.dev-ui.allow-sql=true
